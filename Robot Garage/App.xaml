<Application x:Class="Robot_Garage.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:convertors="clr-namespace:Robot_Garage.Convertors"
             xmlns:local="clr-namespace:Robot_Garage"
             StartupUri="MainWindow.xaml"
             Startup="App_Startup">
    <Application.Resources>
        <!-- Dark Accents -->
        <SolidColorBrush x:Key="DarkBackgroundBrush" Color="#FF1F1F1F"/>
        <SolidColorBrush x:Key="DarkForegroundBrush" Color="White"/>
        <SolidColorBrush x:Key="ControlBackgroundBrush" Color="#2D2D30"/>
        <SolidColorBrush x:Key="ControlBackgroundBrush2" Color="#3E3E42"/>
        <SolidColorBrush x:Key="DarkBlueBrush" Color="#FF032E61"/>
        <SolidColorBrush x:Key="DarkGreenBrush" Color="#1B5E20"/>
        <SolidColorBrush x:Key="DarkRedBrush" Color="#8B0000"/>
        <SolidColorBrush x:Key="DarkYellowBrush" Color="#B58900"/>
        <SolidColorBrush x:Key="DarkPurpleBrush" Color="#4B0082"/>
        <SolidColorBrush x:Key="DarkOrangeBrush" Color="#E65100"/>
        <SolidColorBrush x:Key="DarkTealBrush" Color="#00695C"/>
        <SolidColorBrush x:Key="DarkPinkBrush" Color="#AD1457"/>
        <SolidColorBrush x:Key="DarkBrownBrush" Color="#5D4037"/>
        <SolidColorBrush x:Key="DarkGrayBrush" Color="#424242"/>
        <!-- Light Accents -->
        <SolidColorBrush x:Key="LightBlueBrush" Color="#0056CC"/>
        <SolidColorBrush x:Key="LightGreenBrush" Color="#2A964D"/>
        <SolidColorBrush x:Key="LightRedBrush" Color="#D32F2F"/>
        <SolidColorBrush x:Key="LightYellowBrush" Color="#FBC02D"/>
        <SolidColorBrush x:Key="LightPurpleBrush" Color="#7B1FA2"/>
        <SolidColorBrush x:Key="LightOrangeBrush" Color="#F57C00"/>
        <SolidColorBrush x:Key="LightTealBrush" Color="#00838F"/>
        <SolidColorBrush x:Key="LightPinkBrush" Color="#C2185B"/>
        <SolidColorBrush x:Key="LightBrownBrush" Color="#8D6E63"/>
        <SolidColorBrush x:Key="LightGrayBrush" Color="#9E9E9E"/>

        <!-- Converters -->
        <convertors:BoolToAvailabilityConverter x:Key="BoolToAvailabilityConverter" />
        <convertors:ByteArrayToImageConverter x:Key="ByteArrayToImageConverter" />

        <!-- Merged dictionaries -->
        <ResourceDictionary x:Key="Animations">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Animations.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

        <!-- Reusable Templates and Styles -->
        <ControlTemplate x:Key="roundbutton" TargetType="Button">
            <Grid>
                <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                           Fill="{TemplateBinding Background}" Stroke="{TemplateBinding Foreground}" 
                           RadiusX="2.5" RadiusY="2.5" />
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
        </ControlTemplate>

        <Style x:Key="NoHighlightButtonStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ArrowButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="Overlay" Background="White" Opacity="0" CornerRadius="3"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Overlay" Property="Opacity" Value="0.2"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Overlay" Property="Opacity" Value="0.35"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Global Control Styles -->
        <Style TargetType="Window">
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="Title" Value="Robot Garage"/>
            <Setter Property="Icon" Value="/assets/images/Logo Small BackGround Removed.png"/>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            <Setter Property="FontFamily" Value="Rubik"/>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            <Setter Property="FontFamily" Value="Rubik"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Rubik"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1.25"/>
        </Style>

        <Style TargetType="PasswordBox">
            <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Rubik"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1.25"/>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
            <Setter Property="FontFamily" Value="Rubik"/>
            <Setter Property="BorderBrush" Value="{StaticResource ControlBackgroundBrush}"/>

            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>

        <Style TargetType="xctk:IntegerUpDown">
            <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Rubik"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1.25"/>
        </Style>

        <Style TargetType="xctk:DropDownButton">
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkGrayBrush}"/>
            <Setter Property="FontFamily" Value="Rubik"/>
        </Style>

        <Style TargetType="ListBox">
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkGrayBrush}"/>
            <Setter Property="FontFamily" Value="Rubik"/>
        </Style>

        <!-- Dark ComboBox Styles -->
        <!-- ComboBoxItem style for the dropdown items -->
        <Style x:Key="DarkComboBoxItemStyle" TargetType="ComboBoxItem">
            <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Style.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush2}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush2}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Full ComboBox style including template overrides -->
        <Style x:Key="DarkComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}" />
            <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource DarkComboBoxItemStyle}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                                          Grid.Column="2"
                                          Focusable="False"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"/>
                            <ContentPresenter Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="3,3,23,3"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"/>
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      Background="{StaticResource ControlBackgroundBrush}">
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDown" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="DarkGray"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>